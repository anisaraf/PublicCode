<project name="common" basedir="." default="main"  xmlns:ivy="antlib:org.apache.ivy.ant">

  <property name="lib.dir"     value="../../lib"/>
  <property name="src.dir"     value="src"/>
  <property name="build.dir"   value="build"/>
  <property name="classes.dir" value="${build.dir}/classes"/>
  <property name="jar.dir"     value="${build.dir}/jar"/>
  <property name="report.dir"  value="${build.dir}/junitreport"/>
  
  <property name="ivy.file"     value="../../ivy.xml"/>
  <property name="ivy.lib.dir"     value="../../lib"/>
  <property name="ivy.doc.dir"     value="../../javadocs"/>

  <property name="main.class"  value="${subproject.main.class}"/>
  <property name="project.name"  value="${subproject.name}"/>

  <path id="classpath">
    <fileset dir="${lib.dir}" includes="**/*.jar"/>
  </path>


  <target name="clean">
    <delete dir="${build.dir}"/>
  </target>

  <target name="resolve" unless="lib.present"
	  description="Retrieve dependencies with ivy.">
    <ivy:resolve file="${ivy.file}"/>
    <ivy:retrieve type="jar,bundle" pattern="${ivy.lib.dir}/[artifact]-[revision].[ext]"/>
    <ivy:retrieve pattern="${ivy.doc.dir}/[artifact]-javadoc-[revision].[ext]" sync="false" type='javadoc'/>
    
  </target>
   


  <macrodef name="info">
    <text name="text"/>
    <sequential>
      <echo level="info">@{text}</echo>
      <input addProperty="nopause" message="Press return to continue..."/>
    </sequential>
  </macrodef>

  <macrodef name="run-main">
    <attribute name="class"/>
    <attribute name="spawn" default="no"/>
    <element name="args" optional="yes"/>

    <sequential>
      <echo>Running @{class}...</echo>
      <java classname="@{class}" fork="true" spawn="@{spawn}">
        <args/>
        <classpath>
          <path refid="classpath"/>
          <pathelement location="${classes.dir}"/>
        </classpath>
      </java>
    </sequential>
  </macrodef>

  <target name="compile">
    <mkdir dir="${classes.dir}"/>
    <javac srcdir="${src.dir}" destdir="${classes.dir}" classpathref="classpath" includeantruntime="true"/>
    <copy todir="${classes.dir}">
      <fileset dir="${src.dir}" excludes="**/*.java"/>
    </copy>
  </target>
  
  <target name="jar" depends="compile">
    <mkdir dir="${jar.dir}"/>
    <jar destfile="${jar.dir}/${project.name}.jar" basedir="${classes.dir}">
      <manifest>
	<attribute name="Main-Class" value="${main.class}"/>
      </manifest>
    </jar>
  </target>

  <target name="run" depends="jar">
    <java fork="true" classname="${main.class}">
      <classpath>
	<path refid="classpath"/>
	<path id="application" location="${jar.dir}/${project.name}.jar"/>
      </classpath>
    </java>
  </target>

  <!-- ant test -Dtest=QueryParser -->
  <target name="test" depends="jar">
    <mkdir dir="${report.dir}"/>
     <junit errorProperty="test.failed"
      failureProperty="test.failed"
      reloading="false"
      printsummary="yes">
      <classpath>
	<path refid="classpath"/>
	<path location="${jar.dir}/${project.name}.jar"/>
	<path location="${classes.dir}"/>
      </classpath>

      <formatter type="brief" usefile="false"/>

      <batchtest unless="test" fork="yes">
	<fileset dir="${build.dir}/classes" includes="**/*Test.class"/>
      </batchtest>
      <batchtest if="test" fork="yes">
        <fileset dir="${build.dir}/classes" includes="**/${test}Test.class"/>
      </batchtest>
      
    </junit>
  </target>

  <target name="junitreport">
    <junitreport todir="${report.dir}">
      <fileset dir="${report.dir}" includes="TEST-*.xml"/>
      <report todir="${report.dir}"/>
    </junitreport>
  </target>

  <target name="clean-build" depends="clean,jar"/>

  <target name="main" depends="clean,run"/>


  

</project>
